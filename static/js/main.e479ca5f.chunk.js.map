{"version":3,"sources":["componets/PhoneBook.js","componets/Contacts.js","App.js","reportWebVitals.js","index.js"],"names":["PhoneBook","props","filter","name","number","handleSubmit","handleNameChange","handleNumberChange","handleFilterChange","onSubmit","onChange","value","type","pattern","title","required","Contacts","contacts","handleDeleteItem","map","contact","onClick","id","contactsLocalstorageItemName","App","useState","localStorageItem","localStorage","getItem","JSON","parse","setContacts","setFilter","setName","setNumber","useEffect","setItem","stringify","event","preventDefault","some","alert","uuidv4","currentTarget","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAGaA,EAAY,SAACC,GACxB,IACEC,EAOED,EAPFC,OACAC,EAMEF,EANFE,KACAC,EAKEH,EALFG,OACAC,EAIEJ,EAJFI,aACAC,EAGEL,EAHFK,iBACAC,EAEEN,EAFFM,mBACAC,EACEP,EADFO,mBAGF,OACE,gCACE,2CACA,uBAAMC,SAAUJ,EAAhB,UACE,sCACA,uBACEK,SAAUJ,EACVK,MAAOR,EACPS,KAAK,OACLT,KAAK,OACLU,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,IAEV,wCACA,uBACEJ,MAAOP,EACPM,SAAUH,EACVK,KAAK,MACLT,KAAK,SACLU,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,IAEV,wBAAQH,KAAK,SAAb,4BAEF,uDACA,uBAAOA,KAAK,OAAOD,MAAOT,EAAQQ,SAAUF,QCtCrCQ,EAAW,SAACf,GACvB,IAAQgB,EAA+BhB,EAA/BgB,SAAUC,EAAqBjB,EAArBiB,iBAClB,OACE,gCACE,0CACA,6BACGD,EAASE,KAAI,SAACC,GACb,OACE,+BACGA,EAAQjB,KADX,KACmBiB,EAAQhB,OAAQ,IACjC,wBACEiB,QAAS,WACPH,EAAiBE,EAAQE,KAF7B,sBAFOF,EAAQE,aCLvBC,EAA+B,WAiFtBC,EA/EH,WACV,MAAgCC,oBAAS,WACvC,IAAMC,EAAmBC,aAAaC,QAAQL,GAE9C,OAAyB,OAArBG,EACKG,KAAKC,MAAMJ,GAEX,MANX,mBAAOT,EAAP,KAAiBc,EAAjB,KAUA,EAA4BN,mBAAS,IAArC,mBAAOvB,EAAP,KAAe8B,EAAf,KACA,EAAwBP,mBAAS,IAAjC,mBAAOtB,EAAP,KAAa8B,EAAb,KACA,EAA4BR,mBAAS,IAArC,mBAAOrB,EAAP,KAAe8B,EAAf,KAEAC,qBAAU,WACRR,aAAaS,QAAQb,EAA8BM,KAAKQ,UAAUpB,MACjE,CAACA,IA2CJ,OACE,gCACE,cAAC,EAAD,CACEf,OAAQA,EACRC,KAAMA,EACNC,OAAQA,EACRC,aA/Ce,SAACiC,GACpBA,EAAMC,iBAENR,GAAY,SAACd,GACX,OAAIA,EAASuB,MAAK,SAACpB,GAAD,OAAaA,EAAQjB,OAASA,MAC9CsC,MAAM,GAAD,OAAItC,EAAJ,4BACEc,IAEPgB,EAAQ,IACRC,EAAU,IACJ,GAAN,mBAAWjB,GAAX,CAAqB,CAAEd,OAAMmB,GAAIoB,cAAUtC,iBAsC3CE,iBA7BmB,SAACgC,GACxBL,EAAQK,EAAMK,cAAchC,QA6BxBJ,mBA1BqB,SAAC+B,GAC1BJ,EAAUI,EAAMK,cAAchC,QA0B1BH,mBAvBqB,SAAC8B,GAC1BN,EAAUM,EAAMK,cAAchC,UAwB5B,cAAC,EAAD,CACEM,SArBW,KAAXf,EACKe,EAEAA,EAASf,QAAO,SAACkB,GACtB,OAAOA,EAAQjB,KAAKyC,cAAcC,SAAS3C,EAAO0C,kBAkBlD1B,iBAvCmB,SAACI,GACxBS,GAAY,SAACd,GAAD,OAAcA,EAASf,QAAO,SAACkB,GAAD,OAAaA,EAAQE,KAAOA,eC/B3DwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e479ca5f.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PhoneBook = (props) => {\r\n  const {\r\n    filter,\r\n    name,\r\n    number,\r\n    handleSubmit,\r\n    handleNameChange,\r\n    handleNumberChange,\r\n    handleFilterChange,\r\n  } = props\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <h2>Name</h2>\r\n        <input\r\n          onChange={handleNameChange}\r\n          value={name}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <h2>Number</h2>\r\n        <input\r\n          value={number}\r\n          onChange={handleNumberChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n      <h3>Find contacts by name</h3>\r\n      <input type=\"text\" value={filter} onChange={handleFilterChange} />\r\n    </div>\r\n  )\r\n}\r\nPhoneBook.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  handleNameChange: PropTypes.func.isRequired,\r\n  handleNumberChange: PropTypes.func.isRequired,\r\n  handleFilterChange: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Contacts = (props) => {\r\n  const { contacts, handleDeleteItem } = props\r\n  return (\r\n    <div>\r\n      <h1>Contacts</h1>\r\n      <ul>\r\n        {contacts.map((contact) => {\r\n          return (\r\n            <li key={contact.id}>\r\n              {contact.name}: {contact.number}{' '}\r\n              <button\r\n                onClick={() => {\r\n                  handleDeleteItem(contact.id)\r\n                }}\r\n              >\r\n                delete\r\n              </button>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  handleDeleteItem: PropTypes.func.isRequired,\r\n}\r\n","import React, { useEffect, useState } from 'react'\nimport './App.css'\nimport { v4 as uuidv4 } from 'uuid'\nimport { PhoneBook } from './componets/PhoneBook.js'\nimport { Contacts } from './componets/Contacts'\n\nconst contactsLocalstorageItemName = 'contacts'\n\nconst App = () => {\n  const [contacts, setContacts] = useState(() => {\n    const localStorageItem = localStorage.getItem(contactsLocalstorageItemName)\n\n    if (localStorageItem !== null) {\n      return JSON.parse(localStorageItem)\n    } else {\n      return []\n    }\n  })\n\n  const [filter, setFilter] = useState('')\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n\n  useEffect(() => {\n    localStorage.setItem(contactsLocalstorageItemName, JSON.stringify(contacts))\n  }, [contacts])\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    setContacts((contacts) => {\n      if (contacts.some((contact) => contact.name === name)) {\n        alert(`${name} is already in contacts`)\n        return contacts\n      } else {\n        setName('')\n        setNumber('')\n        return [...contacts, { name, id: uuidv4(), number }]\n      }\n    })\n  }\n\n  const handleDeleteItem = (id) => {\n    setContacts((contacts) => contacts.filter((contact) => contact.id !== id))\n  }\n\n  const handleNameChange = (event) => {\n    setName(event.currentTarget.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNumber(event.currentTarget.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.currentTarget.value)\n  }\n\n  const filterContacts = () => {\n    if (filter === '') {\n      return contacts\n    } else {\n      return contacts.filter((contact) => {\n        return contact.name.toLowerCase().includes(filter.toLowerCase())\n      })\n    }\n  }\n\n  return (\n    <div>\n      <PhoneBook\n        filter={filter}\n        name={name}\n        number={number}\n        handleSubmit={handleSubmit}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        handleFilterChange={handleFilterChange}\n      />\n      <Contacts\n        contacts={filterContacts()}\n        handleDeleteItem={handleDeleteItem}\n      />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}